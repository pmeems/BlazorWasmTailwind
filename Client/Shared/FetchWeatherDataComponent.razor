@using System.Data.SqlTypes
@using Microsoft.AspNetCore.Components.WebAssembly.Hosting
@inject HttpClient _http
@inject IWebAssemblyHostEnvironment _hostEnv


@if (Loading)
{
    <LoadingComponent></LoadingComponent>
}
else
{
    <table class="table-simple">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in Forecasts)
            {
                <tr class="border-b">
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private protected WeatherForecast[] Forecasts = { };
    private protected bool Loading = true;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // If the code is running on the pre-rendering process, then don't call APIs.
            if (_hostEnv.Environment == "Prerendering") return;

            Forecasts = await _http.GetFromJsonAsync<WeatherForecast[]>("/api/WeatherForecast") ?? new WeatherForecast[] { };
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
            throw new Exception("Could not load the weather data", ex);
        }
        finally
        {
            Loading = false;
        }
    }
}